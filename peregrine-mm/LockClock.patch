diff --git a/Android.mk b/Android.mk
index 6eec790..67cccc7 100644
--- a/Android.mk
+++ b/Android.mk
@@ -24,14 +24,13 @@ LOCAL_PACKAGE_NAME := LockClock
 LOCAL_PROGUARD_FLAG_FILES := proguard.flags
 
 # Include res dir from chips
-google_play_dir := ../../../external/google/google_play_services/libproject/google-play-services_lib/res
-res_dir := $(google_play_dir) res
+res_dir := res
 
 LOCAL_RESOURCE_DIR := $(addprefix $(LOCAL_PATH)/, $(res_dir))
 LOCAL_AAPT_FLAGS := --auto-add-overlay
-LOCAL_AAPT_FLAGS += --extra-packages com.google.android.gms
+LOCAL_AAPT_FLAGS += --extra-packages
 
-LOCAL_STATIC_JAVA_LIBRARIES := play \
+LOCAL_STATIC_JAVA_LIBRARIES :=  \
                                org.cyanogenmod.platform.sdk
 
 include $(BUILD_PACKAGE)
diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index d4255e8..1a422e2 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -44,9 +44,6 @@
         android:theme="@style/Theme.Main"
         android:name=".WidgetApplication" >
 
-        <meta-data android:name="com.google.android.gms.version"
-                   android:value="@integer/google_play_services_version" />
-
         <activity
             android:name=".preference.Preferences"
             android:configChanges="orientation|screenSize"
diff --git a/src/com/cyanogenmod/lockclock/weather/WeatherUpdateService.java b/src/com/cyanogenmod/lockclock/weather/WeatherUpdateService.java
index 1fd6f70..d3cabfa 100644
--- a/src/com/cyanogenmod/lockclock/weather/WeatherUpdateService.java
+++ b/src/com/cyanogenmod/lockclock/weather/WeatherUpdateService.java
@@ -44,8 +44,6 @@ import com.cyanogenmod.lockclock.misc.Constants;
 import com.cyanogenmod.lockclock.misc.Preferences;
 import com.cyanogenmod.lockclock.misc.WidgetUtils;
 import com.cyanogenmod.lockclock.preference.WeatherPreferences;
-import com.google.android.gms.common.ConnectionResult;
-import com.google.android.gms.common.GooglePlayServicesUtil;
 import cyanogenmod.weather.CMWeatherManager;
 import cyanogenmod.weather.WeatherInfo;
 import cyanogenmod.weather.WeatherLocation;
@@ -344,11 +342,6 @@ public class WeatherUpdateService extends Service {
                 String locationProvider = lm.getBestProvider(sLocationCriteria, true);
                 if (TextUtils.isEmpty(locationProvider)) {
                     Log.e(TAG, "No available location providers matching criteria.");
-                } else if (isGooglePlayServicesAvailable()
-                        && locationProvider.equals(LocationManager.GPS_PROVIDER)) {
-                    // Since Google Play services is available,
-                    // let's conserve battery power and not depend on the device's GPS.
-                    Log.i(TAG, "Google Play Services available; Ignoring GPS provider.");
                 } else {
                     WeatherLocationListener.registerIfNeeded(mContext, locationProvider);
                 }
@@ -356,12 +349,6 @@ public class WeatherUpdateService extends Service {
             return location;
         }
 
-        private boolean isGooglePlayServicesAvailable() {
-            int result = GooglePlayServicesUtil.isGooglePlayServicesAvailable(mContext);
-            return result == ConnectionResult.SUCCESS
-                    || result == ConnectionResult.SERVICE_VERSION_UPDATE_REQUIRED;
-        }
-
         private void onWeatherRequestCompleted(WeatherInfo result) {
             if (D) Log.d(TAG, "Weather update received, caching data and updating widget");
             cancelTimeoutAlarm();
